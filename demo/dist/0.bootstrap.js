(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/cybex_ecc.js":
/*!***************************!*\
  !*** ../pkg/cybex_ecc.js ***!
  \***************************/
/*! exports provided: Ecc, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ecc\", function() { return Ecc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cybex_ecc_bg */ \"../pkg/cybex_ecc_bg.wasm\");\n/* tslint:disable */\n\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory = new Uint8Array(_cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction passStringToWasm(arg) {\n\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](buf.length);\n    getUint8Memory().set(buf, ptr);\n    return [ptr, buf.length];\n}\n\nfunction passArray8ToWasm(arg) {\n    const ptr = _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    return [ptr, arg.length];\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null) {\n        cachedGlobalArgumentPtr = _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_global_argument_ptr\"]();\n    }\n    return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint32Memory = new Uint32Array(_cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nfunction getArrayU8FromWasm(ptr, len) {\n    return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n\nfunction freeEcc(ptr) {\n\n    _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_ecc_free\"](ptr);\n}\n/**\n*/\nclass Ecc {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Ecc.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeEcc(ptr);\n    }\n\n    /**\n    * @param {string} arg0\n    * @returns {Ecc}\n    */\n    static from_seed(arg0) {\n        const [ptr0, len0] = passStringToWasm(arg0);\n        try {\n            return Ecc.__wrap(_cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"ecc_from_seed\"](ptr0, len0));\n\n        } finally {\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @param {Uint8Array} arg0\n    * @returns {Ecc}\n    */\n    static from_buffer(arg0) {\n        const [ptr0, len0] = passArray8ToWasm(arg0);\n        try {\n            return Ecc.__wrap(_cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"ecc_from_buffer\"](ptr0, len0));\n\n        } finally {\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @param {string} arg0\n    * @returns {string}\n    */\n    sign_hex(arg0) {\n        const [ptr0, len0] = passStringToWasm(arg0);\n        const retptr = globalArgumentPtr();\n        try {\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"ecc_sign_hex\"](retptr, this.ptr, ptr0, len0);\n            const mem = getUint32Memory();\n            const rustptr = mem[retptr / 4];\n            const rustlen = mem[retptr / 4 + 1];\n\n            const realRet = getStringFromWasm(rustptr, rustlen).slice();\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](rustptr, rustlen * 1);\n            return realRet;\n\n\n        } finally {\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @param {Uint8Array} arg0\n    * @returns {Uint8Array}\n    */\n    sign_buffer(arg0) {\n        const [ptr0, len0] = passArray8ToWasm(arg0);\n        const retptr = globalArgumentPtr();\n        try {\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"ecc_sign_buffer\"](retptr, this.ptr, ptr0, len0);\n            const mem = getUint32Memory();\n            const rustptr = mem[retptr / 4];\n            const rustlen = mem[retptr / 4 + 1];\n\n            const realRet = getArrayU8FromWasm(rustptr, rustlen).slice();\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](rustptr, rustlen * 1);\n            return realRet;\n\n\n        } finally {\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @param {Uint8Array} arg0\n    * @returns {string}\n    */\n    sign_buffer_to_hex(arg0) {\n        const [ptr0, len0] = passArray8ToWasm(arg0);\n        const retptr = globalArgumentPtr();\n        try {\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"ecc_sign_buffer_to_hex\"](retptr, this.ptr, ptr0, len0);\n            const mem = getUint32Memory();\n            const rustptr = mem[retptr / 4];\n            const rustlen = mem[retptr / 4 + 1];\n\n            const realRet = getStringFromWasm(rustptr, rustlen).slice();\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](rustptr, rustlen * 1);\n            return realRet;\n\n\n        } finally {\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @param {string} arg0\n    * @param {BigInt} arg1\n    * @param {string} arg2\n    * @returns {string}\n    */\n    decode_memo(arg0, arg1, arg2) {\n        const [ptr0, len0] = passStringToWasm(arg0);\n\n        uint64CvtShim[0] = arg1;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n\n        const [ptr2, len2] = passStringToWasm(arg2);\n        const retptr = globalArgumentPtr();\n        try {\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"ecc_decode_memo\"](retptr, this.ptr, ptr0, len0, low1, high1, ptr2, len2);\n            const mem = getUint32Memory();\n            const rustptr = mem[retptr / 4];\n            const rustlen = mem[retptr / 4 + 1];\n\n            const realRet = getStringFromWasm(rustptr, rustlen).slice();\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](rustptr, rustlen * 1);\n            return realRet;\n\n\n        } finally {\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n            _cybex_ecc_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr2, len2 * 1);\n\n        }\n\n    }\n}\n\nfunction __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n\n\n//# sourceURL=webpack:///../pkg/cybex_ecc.js?");

/***/ }),

/***/ "../pkg/cybex_ecc_bg.wasm":
/*!********************************!*\
  !*** ../pkg/cybex_ecc_bg.wasm ***!
  \********************************/
/*! exports provided: memory, __wbg_ecc_free, ecc_from_seed, ecc_from_buffer, ecc_sign_hex, ecc_sign_buffer, ecc_sign_buffer_to_hex, ecc_decode_memo, __wbindgen_global_argument_ptr, __wbindgen_malloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./cybex_ecc */ \"../pkg/cybex_ecc.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/cybex_ecc_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var cybex_ecc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cybex-ecc */ \"../pkg/cybex_ecc.js\");\n\n\nif (window) {\n  window.$Ecc = cybex_ecc__WEBPACK_IMPORTED_MODULE_0__[\"Ecc\"];\n}\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);